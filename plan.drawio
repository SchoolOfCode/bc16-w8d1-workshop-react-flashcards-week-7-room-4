<mxfile host="65bd71144e">
    <diagram id="4K27-redAv0thbsWwMAv" name="Page-1">
        <mxGraphModel dx="976" dy="669" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="&lt;font style=&quot;font-size: 24px;&quot;&gt;Brief:&lt;br&gt;Create a react flashcard app&lt;br&gt;End user: a learner of react&lt;br&gt;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
                    <mxGeometry x="30" y="50" width="290" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="&lt;font style=&quot;font-size: 24px;&quot;&gt;Features:&lt;br&gt;View flashcards&lt;br&gt;Turn flashcards&lt;br&gt;Create flashcards&lt;br&gt;Delete flashcards&lt;br&gt;Formatting (with some in MVPs)&lt;br&gt;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
                    <mxGeometry x="30" y="290" width="290" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="MVP 1:&lt;br&gt;1) Choose frameworks&lt;br&gt;2) Install framework&lt;br&gt;3) Run empty webpage" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=24;" vertex="1" parent="1">
                    <mxGeometry x="368" y="110" width="180" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="MVP 2:&lt;br&gt;1) Create component tree diagram&lt;br&gt;2) Create layout architecture: empty components&lt;br&gt;3) Basic CSS to make future development easier" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=24;" vertex="1" parent="1">
                    <mxGeometry x="368" y="400" width="180" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="MVP 3 (View Flashcards):&lt;br&gt;1) Pass props into flashcard component and have them displayed" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=24;" vertex="1" parent="1">
                    <mxGeometry x="368" y="700" width="180" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="MVP 4 (Turn Flashcards):&lt;br&gt;1) Create state and conditional rendering for flashcards according to onClick()" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=24;" vertex="1" parent="1">
                    <mxGeometry x="368" y="950" width="180" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="10" value="MVP 5 (Delete Flashcard):&lt;br&gt;2 approaches:&lt;br&gt;a) Have cards as a mapped array: to delete, remove the specified card object from the array&lt;br&gt;b) conditional rendering of an empty fragment according to 'visibility' state" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=24;" vertex="1" parent="1">
                    <mxGeometry x="368" y="1310" width="180" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="13" value="MVP 6 (Create flashcard) Flashcards):&lt;br&gt;1) Using contents of input field - pass down prop to Card component&lt;br&gt;2) Render new card based on this prop" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=24;" vertex="1" parent="1">
                    <mxGeometry x="368" y="1720" width="180" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="MVP 7 (Formatting):&lt;br&gt;1) Add CSS to all components&lt;br&gt;2) Keep as much in the general CSS file as possible" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=24;" vertex="1" parent="1">
                    <mxGeometry x="380" y="2030" width="180" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="15" value="Stretch goals to be chosen and planned after MVP 7 is complete" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=24;" vertex="1" parent="1">
                    <mxGeometry x="72.5" y="520" width="205" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="" style="endArrow=none;html=1;fontSize=24;" edge="1" parent="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="320" y="2350" as="sourcePoint"/>
                        <mxPoint x="320" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>